
[done] 1. test "call a subprocess, and update a DB when subprocess returns"
  (start with `sleep 10`)

  note: if we call t.isAlive(), we can check if the thread has returned or not.

2. put correct caffe calls in subprocess.call commands

3. keeping the GPUs saturated...
    
   when we launch jobq[i], set jobq[i]['thread'] = t

   and then, keep track of # active threads:
    active_threads = [j for j in jobq if j.has_key('thread') and j['thread'].isAlive() == True]
    if len(active_threads) < n_proc:
        #launch a new thread.

4. set up "caffe trains for 5k iter... if above a threshold, then continue."
  -> do this w/ multiple solver.prototxts?
  -> or, do this by adding a stopping condition in Caffe C++ code?



